{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1OKfOGgZZypR4yBIL0lq8JBU5onP3yrtI","timestamp":1735725833528}],"authorship_tag":"ABX9TyOgpVU/SSf3rLC4xzC24UcH"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9Ts8mL9964ng","executionInfo":{"status":"ok","timestamp":1735725905229,"user_tz":-540,"elapsed":23010,"user":{"displayName":"K Hayakawa","userId":"09387761493852915345"}},"outputId":"9a9de3fd-79a9-4bb4-cd58-867b97f4ee4a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n","Google Driveがマウントされました！\n"]}],"source":["from google.colab import drive\n","\n","# Google Driveをマウント\n","drive.mount('/content/drive')\n","\n","# マウント完了後のメッセージ\n","print(\"Google Driveがマウントされました！\")\n"]},{"cell_type":"code","source":["import pandas as pd\n","\n","# TSVファイルをloadする\n","file_path = '/content/drive/My Drive/signate/test/test.tsv'\n","\n","# TSVファイルの読み込み\n","df = pd.read_csv(file_path, low_memory= False,  sep='\\t')\n","\n","# 読み込んだデータを表示\n","df.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":256},"id":"99lXVZaXI3IQ","executionInfo":{"status":"ok","timestamp":1735725916067,"user_tz":-540,"elapsed":5757,"user":{"displayName":"K Hayakawa","userId":"09387761493852915345"}},"outputId":"23897039-6694-4463-e592-b920afe17b56","collapsed":true},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        id  I1  I2          C1          C2          C3          C4  \\\n","0  1169042   5  20   421256035  3874378935  1892769125  2411205997   \n","1  1169043   5  20   421256035  1537671376   575044823  2298910535   \n","2  1169044   5  20   421256035  1392597759  2522517098  2298910535   \n","3  1169045   5  20  2581703001  1862037199  2448089184  2411205997   \n","4  1169046   5  20   421256035  3874378935  1892769125  2411205997   \n","\n","           C5          C6  I3  ...  I5  I6  I7  I8  I9  I10   I11   I12  \\\n","0  2321672976  1509930964   1  ...   0   0   0   0   0    0   1.0  35.0   \n","1  1301721902  3111151614   2  ...   0   1   0   0   0    0  69.0   1.0   \n","2  2321672976  1509930964   2  ...   0   0   0   0   0    0   NaN   NaN   \n","3   476085660  2068230268   1  ...   0   0   0   0   0    1   NaN   NaN   \n","4  2321672976  1509930964   1  ...   0   0   0   0   0    0   6.0   1.0   \n","\n","         I13     I14  \n","0    76335.0   390.0  \n","1  5634916.0    91.0  \n","2        NaN  1300.0  \n","3        NaN    52.0  \n","4     3921.0   390.0  \n","\n","[5 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-d1d36b3d-f1af-45d9-82e1-2d4a86aa78ee\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>I1</th>\n","      <th>I2</th>\n","      <th>C1</th>\n","      <th>C2</th>\n","      <th>C3</th>\n","      <th>C4</th>\n","      <th>C5</th>\n","      <th>C6</th>\n","      <th>I3</th>\n","      <th>...</th>\n","      <th>I5</th>\n","      <th>I6</th>\n","      <th>I7</th>\n","      <th>I8</th>\n","      <th>I9</th>\n","      <th>I10</th>\n","      <th>I11</th>\n","      <th>I12</th>\n","      <th>I13</th>\n","      <th>I14</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1169042</td>\n","      <td>5</td>\n","      <td>20</td>\n","      <td>421256035</td>\n","      <td>3874378935</td>\n","      <td>1892769125</td>\n","      <td>2411205997</td>\n","      <td>2321672976</td>\n","      <td>1509930964</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>35.0</td>\n","      <td>76335.0</td>\n","      <td>390.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1169043</td>\n","      <td>5</td>\n","      <td>20</td>\n","      <td>421256035</td>\n","      <td>1537671376</td>\n","      <td>575044823</td>\n","      <td>2298910535</td>\n","      <td>1301721902</td>\n","      <td>3111151614</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>69.0</td>\n","      <td>1.0</td>\n","      <td>5634916.0</td>\n","      <td>91.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1169044</td>\n","      <td>5</td>\n","      <td>20</td>\n","      <td>421256035</td>\n","      <td>1392597759</td>\n","      <td>2522517098</td>\n","      <td>2298910535</td>\n","      <td>2321672976</td>\n","      <td>1509930964</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1300.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1169045</td>\n","      <td>5</td>\n","      <td>20</td>\n","      <td>2581703001</td>\n","      <td>1862037199</td>\n","      <td>2448089184</td>\n","      <td>2411205997</td>\n","      <td>476085660</td>\n","      <td>2068230268</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>52.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1169046</td>\n","      <td>5</td>\n","      <td>20</td>\n","      <td>421256035</td>\n","      <td>3874378935</td>\n","      <td>1892769125</td>\n","      <td>2411205997</td>\n","      <td>2321672976</td>\n","      <td>1509930964</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>6.0</td>\n","      <td>1.0</td>\n","      <td>3921.0</td>\n","      <td>390.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d1d36b3d-f1af-45d9-82e1-2d4a86aa78ee')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d1d36b3d-f1af-45d9-82e1-2d4a86aa78ee button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d1d36b3d-f1af-45d9-82e1-2d4a86aa78ee');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c6147460-f4c8-4a1b-9c4d-c71df744eeb5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c6147460-f4c8-4a1b-9c4d-c71df744eeb5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c6147460-f4c8-4a1b-9c4d-c71df744eeb5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PV9sCIudJ-zE","executionInfo":{"status":"ok","timestamp":1735725924931,"user_tz":-540,"elapsed":283,"user":{"displayName":"K Hayakawa","userId":"09387761493852915345"}},"outputId":"38511dc7-4757-46c4-fe61-2f4f6184302a","collapsed":true},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1295086 entries, 0 to 1295085\n","Data columns (total 21 columns):\n"," #   Column  Non-Null Count    Dtype  \n","---  ------  --------------    -----  \n"," 0   id      1295086 non-null  int64  \n"," 1   I1      1295086 non-null  int64  \n"," 2   I2      1295086 non-null  int64  \n"," 3   C1      1295086 non-null  int64  \n"," 4   C2      1295086 non-null  int64  \n"," 5   C3      1295086 non-null  int64  \n"," 6   C4      1295086 non-null  int64  \n"," 7   C5      1295086 non-null  int64  \n"," 8   C6      1295086 non-null  int64  \n"," 9   I3      1295086 non-null  int64  \n"," 10  I4      1295086 non-null  int64  \n"," 11  I5      1295086 non-null  int64  \n"," 12  I6      1295086 non-null  int64  \n"," 13  I7      1295086 non-null  int64  \n"," 14  I8      1295086 non-null  int64  \n"," 15  I9      1295086 non-null  int64  \n"," 16  I10     1295086 non-null  int64  \n"," 17  I11     1065379 non-null  float64\n"," 18  I12     1065379 non-null  float64\n"," 19  I13     1065379 non-null  float64\n"," 20  I14     1253651 non-null  float64\n","dtypes: float64(4), int64(17)\n","memory usage: 207.5 MB\n"]}]},{"cell_type":"markdown","source":["# ユニークな値を確認する"],"metadata":{"id":"k8hJsqu6M8BY"}},{"cell_type":"code","source":["# 列のユニークな値\n","print(\"Unique values in 'I3':\", df['I3'].unique())\n","\n","# 列のユニークな値の総数\n","unique_count = df['I3'].nunique(dropna=False)\n","\n","print(f\"Total unique values in 'I3': {unique_count}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IGbTzl67vXf9","executionInfo":{"status":"ok","timestamp":1735725947009,"user_tz":-540,"elapsed":282,"user":{"displayName":"K Hayakawa","userId":"09387761493852915345"}},"outputId":"ecfbc131-d67f-4a34-9386-50b529f9c247"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Unique values in 'I3': [1 2 0]\n","Total unique values in 'I3': 3\n"]}]},{"cell_type":"code","source":["print(df.groupby('C1')['click'].mean())\n","print(df.groupby('C4')['click'].mean())\n","print(df.groupby('C6')['click'].mean())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UNRSVlRbMidL","executionInfo":{"status":"ok","timestamp":1735089223022,"user_tz":-540,"elapsed":333,"user":{"displayName":"K Hayakawa","userId":"09387761493852915345"}},"outputId":"171104d9-0c0f-435a-bd7e-9cafdd3447dd","collapsed":true},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["C1\n","421256035     0.096847\n","1045405899    0.028566\n","1111213504    0.039077\n","2068315619    0.119345\n","2387281372    0.032790\n","2541535031    0.046566\n","2581703001    0.032466\n","2686811630    0.022040\n","3651044092    0.031724\n","Name: click, dtype: float64\n","C4\n","400122826     0.021935\n","1332932160    0.113452\n","1404944795    0.068966\n","1825710598    0.064510\n","2298910535    0.072711\n","2411205997    0.065479\n","3954817824    0.377528\n","Name: click, dtype: float64\n","C6\n","147733495     0.034488\n","1238839469    0.073614\n","1410751928    0.112839\n","1479325723    0.033869\n","1509930964    0.088030\n","1769722553    0.063406\n","1802588585    0.027972\n","1991667031    0.059382\n","2068230268    0.040931\n","2141877921    0.044108\n","2798684489    0.037675\n","3016268466    0.062222\n","3111151614    0.055194\n","3668889797    0.127731\n","3684013252    0.031501\n","4161523369    0.046025\n","Name: click, dtype: float64\n"]}]},{"cell_type":"markdown","source":["# カテゴリ値の前処理"],"metadata":{"id":"QDbkKlQzSY3-"}},{"cell_type":"code","source":["#C1=9、C4=7、C6=16はユニークな値がすくないのでカテゴリ変数にする\n","columns_to_convert = ['C1', 'C4', 'C6']\n","\n","for col in columns_to_convert:\n","    df[col] = df[col].astype('category')\n","\n","\n","#ユニークな値がC2=171、C3=347、C5=223と多いので、出現頻度を計算し、それを数値として使用する\n","columns_to_encode = ['C2', 'C3', 'C5']\n","\n","for col in columns_to_encode:\n","    freq = df[col].value_counts(normalize=True)  # 正規化された出現頻度\n","    df[f'{col}_freq'] = df[col].map(freq)\n","\n","# クラスタリングアルゴリズムを使用して、自動的に出現頻度をグルーピングする\n","\n","from sklearn.cluster import KMeans\n","import numpy as np\n","\n","# KMeansで自動的にグループを生成\n","# 各列に対して適切なクラスタ数を設定\n","columns_to_group = {\n","    'C2_freq': 5,  # C2は5分割\n","    'C3_freq': 5,  # C3は5分割\n","    'C5_freq': 3   # C5は3分割\n","}\n","\n","for col, n_clusters in columns_to_group.items():\n","    kmeans = KMeans(n_clusters=n_clusters, random_state=42)\n","    df[f'{col}_group'] = kmeans.fit_predict(df[[col]])\n","    df[f'{col}_group'] = df[f'{col}_group'].astype('category')  # カテゴリ型に変換\n","\n","\n","#df.drop(columns=['C2', 'C3', 'C5'], inplace=True)\n"],"metadata":{"id":"Lkeiya5TP3Ew","executionInfo":{"status":"ok","timestamp":1735725979146,"user_tz":-540,"elapsed":4468,"user":{"displayName":"K Hayakawa","userId":"09387761493852915345"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AkNzDmmq2Rlf","executionInfo":{"status":"ok","timestamp":1735725985407,"user_tz":-540,"elapsed":285,"user":{"displayName":"K Hayakawa","userId":"09387761493852915345"}},"outputId":"f6bcafe8-29a4-4712-e376-6e25a30942af","collapsed":true},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1295086 entries, 0 to 1295085\n","Data columns (total 27 columns):\n"," #   Column         Non-Null Count    Dtype   \n","---  ------         --------------    -----   \n"," 0   id             1295086 non-null  int64   \n"," 1   I1             1295086 non-null  int64   \n"," 2   I2             1295086 non-null  int64   \n"," 3   C1             1295086 non-null  category\n"," 4   C2             1295086 non-null  int64   \n"," 5   C3             1295086 non-null  int64   \n"," 6   C4             1295086 non-null  category\n"," 7   C5             1295086 non-null  int64   \n"," 8   C6             1295086 non-null  category\n"," 9   I3             1295086 non-null  int64   \n"," 10  I4             1295086 non-null  int64   \n"," 11  I5             1295086 non-null  int64   \n"," 12  I6             1295086 non-null  int64   \n"," 13  I7             1295086 non-null  int64   \n"," 14  I8             1295086 non-null  int64   \n"," 15  I9             1295086 non-null  int64   \n"," 16  I10            1295086 non-null  int64   \n"," 17  I11            1065379 non-null  float64 \n"," 18  I12            1065379 non-null  float64 \n"," 19  I13            1065379 non-null  float64 \n"," 20  I14            1253651 non-null  float64 \n"," 21  C2_freq        1295086 non-null  float64 \n"," 22  C3_freq        1295086 non-null  float64 \n"," 23  C5_freq        1295086 non-null  float64 \n"," 24  C2_freq_group  1295086 non-null  category\n"," 25  C3_freq_group  1295086 non-null  category\n"," 26  C5_freq_group  1295086 non-null  category\n","dtypes: category(6), float64(7), int64(14)\n","memory usage: 214.9 MB\n"]}]},{"cell_type":"markdown","source":["# 数値変数の前処理\n","今回のデータは匿名化されたデータであり、元々の意味がカテゴリ情報である可能性が高いです。可視化してユニーク値の数が少ない、分布が均等である場合、カテゴリ変数に変換したのですが、うまくいきませんでした。分布から右テールの長い特徴量にのみ、対数変換を適用しました。"],"metadata":{"id":"urjnWgAXt2Bn"}},{"cell_type":"code","source":["import numpy as np\n","\n","# 対数変換を適用したい列リスト\n","columns_to_log_transform = ['I5', 'I11', 'I12', 'I13', 'I14']\n","\n","for col in columns_to_log_transform:\n","    # 欠損値を中央値で補完\n","    if df[col].isnull().any():\n","        print(f\"{col} に欠損値が {df[col].isnull().sum()} 個含まれています。補完を行います。\")\n","        df[col] = df[col].fillna(df[col].median())\n","\n","    # 0以下の値を小さな正の値に置き換える（安全策）\n","    if (df[col] <= 0).any():\n","        print(f\"{col} に 0 以下の値が含まれています。クリッピングを行います。\")\n","        df[col] = df[col].clip(lower=1e-6)\n","\n","    # 対数変換を適用\n","    df[col] = np.log1p(df[col])\n","\n","    # 確認\n","    print(f\"{col} の処理後: 欠損値数={df[col].isnull().sum()}, 最小値={df[col].min()}\")"],"metadata":{"id":"uLPBarNnuvNl","executionInfo":{"status":"ok","timestamp":1735726005567,"user_tz":-540,"elapsed":796,"user":{"displayName":"K Hayakawa","userId":"09387761493852915345"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"3c9f5299-bafc-4416-d277-150531068e5b"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["I5 に 0 以下の値が含まれています。クリッピングを行います。\n","I5 の処理後: 欠損値数=0, 最小値=9.999995000003334e-07\n","I11 に欠損値が 229707 個含まれています。補完を行います。\n","I11 に 0 以下の値が含まれています。クリッピングを行います。\n","I11 の処理後: 欠損値数=0, 最小値=9.999995000003334e-07\n","I12 に欠損値が 229707 個含まれています。補完を行います。\n","I12 に 0 以下の値が含まれています。クリッピングを行います。\n","I12 の処理後: 欠損値数=0, 最小値=9.999995000003334e-07\n","I13 に欠損値が 229707 個含まれています。補完を行います。\n","I13 に 0 以下の値が含まれています。クリッピングを行います。\n","I13 の処理後: 欠損値数=0, 最小値=9.999995000003334e-07\n","I14 に欠損値が 41435 個含まれています。補完を行います。\n","I14 に 0 以下の値が含まれています。クリッピングを行います。\n","I14 の処理後: 欠損値数=0, 最小値=9.999995000003334e-07\n"]}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JlrZhw7i_Cx8","executionInfo":{"status":"ok","timestamp":1735726020542,"user_tz":-540,"elapsed":238,"user":{"displayName":"K Hayakawa","userId":"09387761493852915345"}},"outputId":"ebdbe1de-ed12-417c-dbf8-8db1bb5b12d8"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1295086 entries, 0 to 1295085\n","Data columns (total 27 columns):\n"," #   Column         Non-Null Count    Dtype   \n","---  ------         --------------    -----   \n"," 0   id             1295086 non-null  int64   \n"," 1   I1             1295086 non-null  int64   \n"," 2   I2             1295086 non-null  int64   \n"," 3   C1             1295086 non-null  category\n"," 4   C2             1295086 non-null  int64   \n"," 5   C3             1295086 non-null  int64   \n"," 6   C4             1295086 non-null  category\n"," 7   C5             1295086 non-null  int64   \n"," 8   C6             1295086 non-null  category\n"," 9   I3             1295086 non-null  int64   \n"," 10  I4             1295086 non-null  int64   \n"," 11  I5             1295086 non-null  float64 \n"," 12  I6             1295086 non-null  int64   \n"," 13  I7             1295086 non-null  int64   \n"," 14  I8             1295086 non-null  int64   \n"," 15  I9             1295086 non-null  int64   \n"," 16  I10            1295086 non-null  int64   \n"," 17  I11            1295086 non-null  float64 \n"," 18  I12            1295086 non-null  float64 \n"," 19  I13            1295086 non-null  float64 \n"," 20  I14            1295086 non-null  float64 \n"," 21  C2_freq        1295086 non-null  float64 \n"," 22  C3_freq        1295086 non-null  float64 \n"," 23  C5_freq        1295086 non-null  float64 \n"," 24  C2_freq_group  1295086 non-null  category\n"," 25  C3_freq_group  1295086 non-null  category\n"," 26  C5_freq_group  1295086 non-null  category\n","dtypes: category(6), float64(8), int64(13)\n","memory usage: 214.9 MB\n"]}]},{"cell_type":"code","source":["import os\n","\n","# 保存先のディレクトリを指定\n","output_dir = \"/content/drive/My Drive/signate/test\"\n","os.makedirs(output_dir, exist_ok=True)  # ディレクトリが存在しない場合は作成\n","\n","# 保存ファイル名を指定\n","output_file = os.path.join(output_dir, \"test_0101.tsv\")\n","\n","# データセットを保存 (TSV形式)\n","df.to_csv(output_file, sep='\\t', index=False)\n","\n","print(f\"データセットが保存されました: {output_file}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KtCD9XztlarJ","executionInfo":{"status":"ok","timestamp":1735726103025,"user_tz":-540,"elapsed":31215,"user":{"displayName":"K Hayakawa","userId":"09387761493852915345"}},"outputId":"fec4cdfe-3c1e-4287-cd81-cf8e781746de"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["データセットが保存されました: /content/drive/My Drive/signate/test/test_0101.tsv\n"]}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":256},"id":"kvTF782705_O","executionInfo":{"status":"ok","timestamp":1735726107399,"user_tz":-540,"elapsed":273,"user":{"displayName":"K Hayakawa","userId":"09387761493852915345"}},"outputId":"fde073b7-73e1-4ef1-bf67-e73f9e5b51ee"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        id  I1  I2          C1          C2          C3          C4  \\\n","0  1169042   5  20   421256035  3874378935  1892769125  2411205997   \n","1  1169043   5  20   421256035  1537671376   575044823  2298910535   \n","2  1169044   5  20   421256035  1392597759  2522517098  2298910535   \n","3  1169045   5  20  2581703001  1862037199  2448089184  2411205997   \n","4  1169046   5  20   421256035  3874378935  1892769125  2411205997   \n","\n","           C5          C6  I3  ...       I11       I12        I13       I14  \\\n","0  2321672976  1509930964   1  ...  0.693147  3.583519  11.242900  5.968708   \n","1  1301721902  3111151614   2  ...  4.248495  0.693147  15.544493  4.521789   \n","2  2321672976  1509930964   2  ...  3.044522  1.386294  11.716845  7.170888   \n","3   476085660  2068230268   1  ...  3.044522  1.386294  11.716845  3.970292   \n","4  2321672976  1509930964   1  ...  1.945910  0.693147   8.274357  5.968708   \n","\n","    C2_freq   C3_freq   C5_freq  C2_freq_group  C3_freq_group  C5_freq_group  \n","0  0.270156  0.139239  0.364997              3              4              1  \n","1  0.067185  0.021284  0.000912              1              2              0  \n","2  0.001631  0.001631  0.364997              2              2              1  \n","3  0.249447  0.152445  0.095713              0              0              2  \n","4  0.270156  0.139239  0.364997              3              4              1  \n","\n","[5 rows x 27 columns]"],"text/html":["\n","  <div id=\"df-f0ccbbaa-f41a-49e7-b3d6-239c67b74890\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>I1</th>\n","      <th>I2</th>\n","      <th>C1</th>\n","      <th>C2</th>\n","      <th>C3</th>\n","      <th>C4</th>\n","      <th>C5</th>\n","      <th>C6</th>\n","      <th>I3</th>\n","      <th>...</th>\n","      <th>I11</th>\n","      <th>I12</th>\n","      <th>I13</th>\n","      <th>I14</th>\n","      <th>C2_freq</th>\n","      <th>C3_freq</th>\n","      <th>C5_freq</th>\n","      <th>C2_freq_group</th>\n","      <th>C3_freq_group</th>\n","      <th>C5_freq_group</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1169042</td>\n","      <td>5</td>\n","      <td>20</td>\n","      <td>421256035</td>\n","      <td>3874378935</td>\n","      <td>1892769125</td>\n","      <td>2411205997</td>\n","      <td>2321672976</td>\n","      <td>1509930964</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0.693147</td>\n","      <td>3.583519</td>\n","      <td>11.242900</td>\n","      <td>5.968708</td>\n","      <td>0.270156</td>\n","      <td>0.139239</td>\n","      <td>0.364997</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1169043</td>\n","      <td>5</td>\n","      <td>20</td>\n","      <td>421256035</td>\n","      <td>1537671376</td>\n","      <td>575044823</td>\n","      <td>2298910535</td>\n","      <td>1301721902</td>\n","      <td>3111151614</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>4.248495</td>\n","      <td>0.693147</td>\n","      <td>15.544493</td>\n","      <td>4.521789</td>\n","      <td>0.067185</td>\n","      <td>0.021284</td>\n","      <td>0.000912</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1169044</td>\n","      <td>5</td>\n","      <td>20</td>\n","      <td>421256035</td>\n","      <td>1392597759</td>\n","      <td>2522517098</td>\n","      <td>2298910535</td>\n","      <td>2321672976</td>\n","      <td>1509930964</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>3.044522</td>\n","      <td>1.386294</td>\n","      <td>11.716845</td>\n","      <td>7.170888</td>\n","      <td>0.001631</td>\n","      <td>0.001631</td>\n","      <td>0.364997</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1169045</td>\n","      <td>5</td>\n","      <td>20</td>\n","      <td>2581703001</td>\n","      <td>1862037199</td>\n","      <td>2448089184</td>\n","      <td>2411205997</td>\n","      <td>476085660</td>\n","      <td>2068230268</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>3.044522</td>\n","      <td>1.386294</td>\n","      <td>11.716845</td>\n","      <td>3.970292</td>\n","      <td>0.249447</td>\n","      <td>0.152445</td>\n","      <td>0.095713</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1169046</td>\n","      <td>5</td>\n","      <td>20</td>\n","      <td>421256035</td>\n","      <td>3874378935</td>\n","      <td>1892769125</td>\n","      <td>2411205997</td>\n","      <td>2321672976</td>\n","      <td>1509930964</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>1.945910</td>\n","      <td>0.693147</td>\n","      <td>8.274357</td>\n","      <td>5.968708</td>\n","      <td>0.270156</td>\n","      <td>0.139239</td>\n","      <td>0.364997</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 27 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f0ccbbaa-f41a-49e7-b3d6-239c67b74890')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f0ccbbaa-f41a-49e7-b3d6-239c67b74890 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f0ccbbaa-f41a-49e7-b3d6-239c67b74890');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-126f6606-d3a9-40a1-b297-4dde99e92219\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-126f6606-d3a9-40a1-b297-4dde99e92219')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-126f6606-d3a9-40a1-b297-4dde99e92219 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iOVa6NwG0-gH","executionInfo":{"status":"ok","timestamp":1735726137450,"user_tz":-540,"elapsed":347,"user":{"displayName":"K Hayakawa","userId":"09387761493852915345"}},"outputId":"be7afabe-01ea-43f4-b920-8dcfb83d2488"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1295086 entries, 0 to 1295085\n","Data columns (total 27 columns):\n"," #   Column         Non-Null Count    Dtype   \n","---  ------         --------------    -----   \n"," 0   id             1295086 non-null  int64   \n"," 1   I1             1295086 non-null  int64   \n"," 2   I2             1295086 non-null  int64   \n"," 3   C1             1295086 non-null  category\n"," 4   C2             1295086 non-null  int64   \n"," 5   C3             1295086 non-null  int64   \n"," 6   C4             1295086 non-null  category\n"," 7   C5             1295086 non-null  int64   \n"," 8   C6             1295086 non-null  category\n"," 9   I3             1295086 non-null  int64   \n"," 10  I4             1295086 non-null  int64   \n"," 11  I5             1295086 non-null  float64 \n"," 12  I6             1295086 non-null  int64   \n"," 13  I7             1295086 non-null  int64   \n"," 14  I8             1295086 non-null  int64   \n"," 15  I9             1295086 non-null  int64   \n"," 16  I10            1295086 non-null  int64   \n"," 17  I11            1295086 non-null  float64 \n"," 18  I12            1295086 non-null  float64 \n"," 19  I13            1295086 non-null  float64 \n"," 20  I14            1295086 non-null  float64 \n"," 21  C2_freq        1295086 non-null  float64 \n"," 22  C3_freq        1295086 non-null  float64 \n"," 23  C5_freq        1295086 non-null  float64 \n"," 24  C2_freq_group  1295086 non-null  category\n"," 25  C3_freq_group  1295086 non-null  category\n"," 26  C5_freq_group  1295086 non-null  category\n","dtypes: category(6), float64(8), int64(13)\n","memory usage: 214.9 MB\n"]}]}]}